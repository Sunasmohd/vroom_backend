# Generated by Django 5.1.5 on 2025-04-15 07:16

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('delivery_radius', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('min_order_amount', models.DecimalField(decimal_places=2, default=10.0, max_digits=8)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=5.0, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='CarouselCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/carousel/')),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], max_length=10)),
                ('sort_order', models.IntegerField(default=0)),
                ('navigate_to', models.CharField(default='offer_screen_page', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/categories/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizationHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('max_selection', models.SmallIntegerField(blank=True, default=1, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpandableHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField()),
                ('party_size', models.PositiveSmallIntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.branch')),
            ],
        ),
        migrations.CreateModel(
            name='CarouselSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carousel_card', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.carouselcard')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.branch')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizationChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('is_veg', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('customization_header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationheader')),
            ],
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('is_expandable', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/deals/')),
                ('flash_sale_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('flash_sale_is_percentage', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ManyToManyField(to='products.category')),
            ],
        ),
        migrations.CreateModel(
            name='ExpandableChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deal_global', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('is_veg', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('expandable_header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.expandableheader')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('offer_type', models.CharField(choices=[('PERCENTAGE', 'Percentage Discount'), ('FLAT', 'Flat Discount'), ('BOGO', 'Buy One Get One'), ('FREE_DELIVERY', 'Free Delivery'), ('FREE_ITEM', 'Free Item'), ('FLASH_SALE', 'Flash Sale')], max_length=20)),
                ('discount_value', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('min_spend', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('max_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('auto_apply', models.BooleanField(default=False)),
                ('near_unlock_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('is_percentage', models.BooleanField(default=False)),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('usage_scope', models.CharField(choices=[('SINGLE_USER', 'Single User'), ('MULTI_USER', 'Multi-User'), ('UNLIMITED', 'Unlimited')], default='UNLIMITED', max_length=20)),
                ('per_user_limit', models.PositiveIntegerField(default=1)),
                ('free_item_quantity', models.PositiveIntegerField(default=1, help_text='Number of free items to provide (for FREE_ITEM offers)')),
                ('applicable_deals', models.ManyToManyField(blank=True, related_name='flash_sale_offers', to='products.deal')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.branch')),
                ('free_deals', models.ManyToManyField(blank=True, to='products.deal')),
            ],
        ),
        migrations.CreateModel(
            name='CartOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_by_user', models.BooleanField(default=False)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.cart')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.offer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('DISPATCHED', 'Dispatched'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.useraddress')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.offer')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.booking')),
                ('order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.order')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ASSIGNED', 'Assigned'), ('PICKED_UP', 'Picked Up'), ('IN_TRANSIT', 'In Transit'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed')], default='ASSIGNED', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('tracking_url', models.URLField(blank=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.deliveryagent')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.order')),
            ],
        ),
        migrations.CreateModel(
            name='Cancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('cancelled_at', models.DateTimeField(auto_now_add=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.booking')),
                ('order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('unit_sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_free', models.BooleanField(default=False)),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('customization_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationchoice')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemExpandableChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('expandable_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.expandablechoices')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('credit', 'Credit Card'), ('debit', 'Debit Card'), ('upi', 'UPI'), ('cod', 'Cash on Delivery'), ('wallet', 'Wallet')], max_length=20)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('last_four', models.CharField(blank=True, max_length=4)),
                ('is_default', models.BooleanField(default=False)),
                ('expiry_month', models.CharField(default=11, max_length=2)),
                ('expiry_year', models.CharField(default=2025, max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'unique_together': {('user', 'payment_type', 'last_four', 'expiry_year', 'expiry_month')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/products/')),
                ('description', models.TextField()),
                ('is_veg', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_customizable', models.BooleanField(default=False)),
                ('flash_sale_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('flash_sale_is_percentage', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product'),
        ),
        migrations.AddField(
            model_name='offer',
            name='applicable_products',
            field=models.ManyToManyField(blank=True, related_name='flash_sale_offers', to='products.product'),
        ),
        migrations.AddField(
            model_name='offer',
            name='free_products',
            field=models.ManyToManyField(blank=True, to='products.product'),
        ),
        migrations.AddField(
            model_name='expandablechoices',
            name='base_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expandable_choices', to='products.product'),
        ),
        migrations.AddField(
            model_name='expandablechoices',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expandable_options', to='products.product'),
        ),
        migrations.CreateModel(
            name='DealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dealproduct_set', to='products.deal')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizationPriceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_base', models.BooleanField(default=False)),
                ('customization_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationchoice')),
                ('customization_price_rules_self', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subpricerules', to='products.customizationpricerule')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('is_free', models.BooleanField(default=False)),
                ('unit_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.cart')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'ordering': ['is_free'],
            },
        ),
        migrations.CreateModel(
            name='ProductChoicesUnavailablility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customization_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationchoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCustomizationHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.SmallIntegerField()),
                ('max_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_percentage', models.BooleanField(default=True)),
                ('customization_header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationheader')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.AddField(
            model_name='offer',
            name='applicable_headers',
            field=models.ManyToManyField(blank=True, to='products.productcustomizationheader'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialSuggestionsBranchWise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.branch')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.tags')),
            ],
        ),
        migrations.CreateModel(
            name='DealTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.tags')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.booking')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.invoice')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='UserOfferUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.offer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
        ),
        migrations.CreateModel(
            name='DealBranchStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('is_out_of_stock', models.BooleanField(default=False)),
                ('out_of_stock_from', models.DateTimeField(blank=True, null=True)),
                ('out_of_stock_until', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.branch')),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
            ],
            options={
                'unique_together': {('branch', 'deal')},
            },
        ),
        migrations.CreateModel(
            name='CartItemCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.cartitem')),
                ('customization_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.customizationchoice')),
                ('deal_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.dealproduct')),
            ],
            options={
                'indexes': [models.Index(fields=['cart_item'], name='idx_cartitemcustomization_cart'), models.Index(fields=['customization_choice'], name='idx_cartitemcustom_choice'), models.Index(fields=['deal_product'], name='idx_cartitemcustom_dealproduct')],
            },
        ),
        migrations.CreateModel(
            name='CartItemExpandableChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.cartitem')),
                ('deal_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.dealproduct')),
                ('expandable_choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.expandablechoices')),
            ],
            options={
                'indexes': [models.Index(fields=['cart_item'], name='idx_cartitemexpandable_cart'), models.Index(fields=['expandable_choice'], name='idx_cartitemexp_choice'), models.Index(fields=['deal_product'], name='idx_cartitemexp_dealproduct')],
            },
        ),
        migrations.CreateModel(
            name='OrderOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.offer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.order')),
            ],
            options={
                'unique_together': {('order', 'offer')},
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menuitem_set', to='products.menu')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('deal', 'menu'), name='menu_and_deal_uniq'), models.UniqueConstraint(fields=('product', 'menu'), name='product_and_menu_uniq')],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.deal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='core.user')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('product__isnull', False)), fields=('user', 'product'), name='unique_user_product_favorite'), models.UniqueConstraint(condition=models.Q(('deal__isnull', False)), fields=('user', 'deal'), name='unique_user_deal_favorite')],
            },
        ),
        migrations.CreateModel(
            name='ProductBranchStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_available', models.BooleanField(default=True)),
                ('is_out_of_stock', models.BooleanField(default=False)),
                ('out_of_stock_from', models.DateTimeField(blank=True, null=True)),
                ('out_of_stock_until', models.DateTimeField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('branch', 'product')},
            },
        ),
        migrations.AddConstraint(
            model_name='productcustomizationheader',
            constraint=models.UniqueConstraint(fields=('customization_header', 'product'), name='customization_header_and_product_uniq'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('user', 'product', 'order')},
        ),
        migrations.AddConstraint(
            model_name='producttags',
            constraint=models.UniqueConstraint(fields=('product', 'tag'), name='product_and_tag_uniq'),
        ),
        migrations.AddConstraint(
            model_name='dealtags',
            constraint=models.UniqueConstraint(fields=('deal', 'tag'), name='deal_and_tag_uniq'),
        ),
        migrations.AlterUniqueTogether(
            name='userofferusage',
            unique_together={('user', 'offer')},
        ),
    ]
